/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['db/interventions.js']) {
  _$jscoverage['db/interventions.js'] = [];
  _$jscoverage['db/interventions.js'][1] = 0;
  _$jscoverage['db/interventions.js'][10] = 0;
  _$jscoverage['db/interventions.js'][11] = 0;
  _$jscoverage['db/interventions.js'][15] = 0;
  _$jscoverage['db/interventions.js'][16] = 0;
  _$jscoverage['db/interventions.js'][17] = 0;
  _$jscoverage['db/interventions.js'][22] = 0;
  _$jscoverage['db/interventions.js'][23] = 0;
  _$jscoverage['db/interventions.js'][27] = 0;
  _$jscoverage['db/interventions.js'][28] = 0;
  _$jscoverage['db/interventions.js'][29] = 0;
}
_$jscoverage['db/interventions.js'][1]++;
var connect = require("./connect"), noevil = require("see-no-evil"), util = require("../util"), CriteriaSpec = {meeting: {mapTo: "meetingId"}, deputy: {mapTo: "deputyId"}, subject: {wrapInRegex: true}};
_$jscoverage['db/interventions.js'][10]++;
module.exports.get = (function (intId, cb) {
  _$jscoverage['db/interventions.js'][11]++;
  var wrap = noevil({error: cb});
  _$jscoverage['db/interventions.js'][15]++;
  connect.ensureConnected(wrap((function (nul, db) {
  _$jscoverage['db/interventions.js'][16]++;
  db.collection("interventions", wrap((function (nul, intsColl) {
  _$jscoverage['db/interventions.js'][17]++;
  intsColl.findOne({id: intId}, cb);
})));
})));
});
_$jscoverage['db/interventions.js'][22]++;
module.exports.getAll = (function (qs, cb) {
  _$jscoverage['db/interventions.js'][23]++;
  var wrap = noevil({error: cb});
  _$jscoverage['db/interventions.js'][27]++;
  connect.ensureConnected(wrap((function (nul, db) {
  _$jscoverage['db/interventions.js'][28]++;
  db.collection("interventions", wrap((function (nul, intsColl) {
  _$jscoverage['db/interventions.js'][29]++;
  intsColl.find(util.normalizeCriteria(qs, CriteriaSpec), util.buildOptionsObject(qs)).toArray(cb);
})));
})));
});
_$jscoverage['db/interventions.js'].source = ["var connect = require('./connect'),","  noevil = require('see-no-evil'),","  util = require('../util'),","  CriteriaSpec = {","    meeting: {mapTo: 'meetingId'},","    deputy: {mapTo: 'deputyId'},","    subject: {wrapInRegex: true}","  }","","module.exports.get = function(intId, cb) {","  var wrap = noevil({","    error: cb","  })","","  connect.ensureConnected(wrap(function(nul, db) {","    db.collection('interventions', wrap(function(nul, intsColl) {","      intsColl.findOne({id: intId}, cb)","    }))","  }))","}","","module.exports.getAll = function(qs, cb) {","  var wrap = noevil({","    error: cb","  })","","  connect.ensureConnected(wrap(function(nul, db) {","    db.collection('interventions', wrap(function(nul, intsColl) {","      intsColl.find(","        util.normalizeCriteria(qs, CriteriaSpec),","        util.buildOptionsObject(qs)","      ).toArray(cb)","    }))","  }))","}"];
